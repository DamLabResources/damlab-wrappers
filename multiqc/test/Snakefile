SAMPLES = ["sample1", "sample2", "sample3"]


rule all:
    input:
        "build/multiqc/multiqc_report.html",
        "build/multiqc/multiqc_report_data/multiqc_general_stats.txt"
    conda: "env.yaml"
    shell:
        "pytest tests.py"


rule multiqc:
    input:
        expand("build/strainline/{sample}.strainline.yaml", sample=SAMPLES),
        expand("build/dorado/{sample}.dorado.yaml", sample=SAMPLES),
    output:
        report = "build/multiqc/multiqc_report.html",
        data = "build/multiqc/multiqc_report_data/multiqc_general_stats.txt"
    params:
        prefix = "../venv",
        extra_args = "-v -f"
    wrapper:
        "file:../multiqc"

rule strainline_mqc:
    input:
        "strainline/{sample}/haplotypes.final.fa",
    output:
        "build/strainline/{sample}.strainline.yaml"
    params:
        sample_name = lambda wildcards: wildcards.sample
    wrapper:
        "file:../strainline"


rule dorado_mqc:
    input:
        "dorado/{sample}.bam"
    output:
        "build/dorado/{sample}.dorado.yaml"
    params:
        sample_name = lambda wildcards: wildcards.sample
    wrapper:
        "file:../dorado"

rule convert_to_bam:
    input:
        "dorado/{sample}.sam"
    output:
        temp("dorado/{sample}.bam")
    wrapper:
        "v5.8.0/bio/samtools/view"
    