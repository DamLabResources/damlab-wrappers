# Get the directory of the current Snakefile
TEST_ROOT_dorado__duplex = Path(workflow.snakefile).parent

rule test_dorado__duplex__all:
    input:
        files = [TEST_ROOT_dorado__duplex/'test_output/test.bam',
                TEST_ROOT_dorado__duplex/'test_output/test_dir.bam'],
        tests = [TEST_ROOT_dorado__duplex/"tests.py"]
    conda: 'env.yaml'
    log: 
        stdout = TEST_ROOT_dorado__duplex/"test_output/pytest.stdout.log",
        stderr = TEST_ROOT_dorado__duplex/"test_output/pytest.stderr.log"
    shell: "cd {TEST_ROOT_dorado__duplex} && pytest {input.tests} > {log.stdout} 2> {log.stderr}"

rule test_dorado__duplex__single:
    input:
        pod = TEST_ROOT_dorado__duplex/'../../tests/filtered.pod5'
    output:
        temp(TEST_ROOT_dorado__duplex/'test_output/test.bam')
    log:
        temp(TEST_ROOT_dorado__duplex/'test_output/test.log')
    threads: 2
    params:
        gpu = 'all',
        models_directory=config.get('DORADO_MODELS_DIR', '')
    wrapper:
        f"file:{TEST_ROOT_dorado__duplex.parent}"

rule test_dorado__duplex__directory:
    input:
        pod = TEST_ROOT_dorado__duplex/'../../tests/'  # directory containing filtered.pod5
    output:
        temp(TEST_ROOT_dorado__duplex/'test_output/test_dir.bam')
    log:
        temp(TEST_ROOT_dorado__duplex/'test_output/test_dir.log')
    threads: 2
    params:
        gpu = 'all',
        models_directory=config.get('DORADO_MODELS_DIR', '')
    wrapper:
        f"file:{TEST_ROOT_dorado__duplex.parent}"
