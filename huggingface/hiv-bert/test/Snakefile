# Get the directory of the current Snakefile
TEST_ROOT_huggingface_hivbert = Path(workflow.snakefile).parent

# Get custom environment from config if available
custom_env = config.get('hiv_bert_env', None)
HUGGINGFACE_MODEL_CACHE = config.get('HUGGINGFACE_MODEL_CACHE', TEST_ROOT_huggingface_hivbert/'test_output/model_cache')

rule test_huggingface__hivbert__all:
    input:
        files = [TEST_ROOT_huggingface_hivbert/'test_output/aa_v3_results.csv',
                TEST_ROOT_huggingface_hivbert/'test_output/dna_v3_results.csv',
                TEST_ROOT_huggingface_hivbert/'test_output/protein_results.csv',
                TEST_ROOT_huggingface_hivbert/'test_output/edge_case_results.csv'],
        tests = [TEST_ROOT_huggingface_hivbert/"tests.py"]
    conda: 'env.yaml'
    log: 
        stdout = TEST_ROOT_huggingface_hivbert/"test_output/pytest.stdout.log",
        stderr = TEST_ROOT_huggingface_hivbert/"test_output/pytest.stderr.log"
    shell: "cd {TEST_ROOT_huggingface_hivbert} && pytest {input.tests} > {log.stdout} 2> {log.stderr}"

rule test_huggingface__hivbert__aa_v3:
    input:
        TEST_ROOT_huggingface_hivbert/'test_aa_v3.fasta'
    output:
        results = TEST_ROOT_huggingface_hivbert/ 'test_output/aa_v3_results.csv',
        metrics = TEST_ROOT_huggingface_hivbert/ 'test_output/aa_v3_metrics.yaml'
    params:
        model_name = 'damlab/HIV_V3_bodysite',
        model_directory = HUGGINGFACE_MODEL_CACHE,
        min_length = 10,
        max_length = 256,
        sample_name = 'V3_Test_Sample',
        custom_env = custom_env
    resources:
        gpu=1
    log:
        stdout = TEST_ROOT_huggingface_hivbert/ 'test_output/aa_v3.log'
    wrapper:
        f"file:{TEST_ROOT_huggingface_hivbert.parent}"

rule test_huggingface__hivbert__dna_v3:
    input:
        TEST_ROOT_huggingface_hivbert/ 'test_dna_v3.fasta'
    output:
        TEST_ROOT_huggingface_hivbert/ 'test_output/dna_v3_results.csv'
    params:
        model_name = 'damlab/HIV_V3_bodysite',
        model_directory = HUGGINGFACE_MODEL_CACHE,
        min_length = 10,
        max_length = 256,
        custom_env = custom_env
    resources:
        gpu=1
    log:
        stdout = TEST_ROOT_huggingface_hivbert/ 'test_output/dna_v3.log'
    wrapper:
        f"file:{TEST_ROOT_huggingface_hivbert.parent}"

rule test_huggingface__hivbert__proteins:
    input:
        TEST_ROOT_huggingface_hivbert/ 'test_aa_proteins.fasta'
    output:
        TEST_ROOT_huggingface_hivbert/ 'test_output/protein_results.csv'
    params:
        model_name = 'damlab/hiv_bert',
        model_directory = HUGGINGFACE_MODEL_CACHE,
        min_length = 10,
        max_length = 256,
        custom_env = custom_env
    resources:
        gpu=1
    log:
        stdout = TEST_ROOT_huggingface_hivbert/ 'test_output/proteins.log'
    wrapper:
        f"file:{TEST_ROOT_huggingface_hivbert.parent}"

rule test_huggingface__hivbert__edge_cases:
    input:
        TEST_ROOT_huggingface_hivbert/ 'test_edge_cases.fasta'
    output:
        TEST_ROOT_huggingface_hivbert/ 'test_output/edge_case_results.csv'
    params:
        model_name = 'damlab/HIV_V3_bodysite',
        model_directory = HUGGINGFACE_MODEL_CACHE,
        min_length = 10,
        max_length = 256,
        custom_env = custom_env
    resources:
        gpu=1
    log:
        stderr = TEST_ROOT_huggingface_hivbert/ 'test_output/edge_cases.log'
    wrapper:
        f"file:{TEST_ROOT_huggingface_hivbert.parent}"
    